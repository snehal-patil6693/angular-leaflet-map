/**
 * @license
 * Copyright Felix Itzenplitz. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at
 * https://github.com/cebor/angular-highcharts/blob/master/LICENSE
 */
import { Inject, Injectable, InjectionToken } from '@angular/core';
import * as Highcharts from 'highcharts';
import * as Highstock from 'highcharts/highstock';
import * as Highmaps from 'highcharts/highmaps';
import * as Highcharts_Gnatt from 'highcharts/highcharts-gantt';
export let HIGHCHARTS_MODULES = new InjectionToken('HighchartsModules');
export class ChartService {
    constructor(chartModules) {
        this.chartModules = chartModules;
    }
    initModules() {
        this.chartModules.forEach(chartModule => {
            [Highcharts, Highstock, Highmaps, Highcharts_Gnatt].forEach(chartModule);
        });
    }
}
ChartService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ChartService.ctorParameters = () => [
    { type: Array, decorators: [{ type: Inject, args: [HIGHCHARTS_MODULES,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItaGlnaGNoYXJ0cy9zcmMvbGliL2NoYXJ0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUNILE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEtBQUssVUFBVSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEtBQUssU0FBUyxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sS0FBSyxRQUFRLE1BQU0scUJBQXFCLENBQUM7QUFDaEQsT0FBTyxLQUFLLGdCQUFnQixNQUFNLDZCQUE2QixDQUFDO0FBRWhFLE1BQU0sQ0FBQyxJQUFJLGtCQUFrQixHQUFHLElBQUksY0FBYyxDQUFRLG1CQUFtQixDQUFDLENBQUM7QUFHL0UsTUFBTSxPQUFPLFlBQVk7SUFDdkIsWUFBZ0QsWUFBbUI7UUFBbkIsaUJBQVksR0FBWixZQUFZLENBQU87SUFBSSxDQUFDO0lBRXhFLFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUN0QyxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNFLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBUkYsVUFBVTs7Ozt3Q0FFSSxNQUFNLFNBQUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEZlbGl4IEl0emVucGxpdHouIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXRcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jZWJvci9hbmd1bGFyLWhpZ2hjaGFydHMvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBIaWdoY2hhcnRzIGZyb20gJ2hpZ2hjaGFydHMnO1xuaW1wb3J0ICogYXMgSGlnaHN0b2NrIGZyb20gJ2hpZ2hjaGFydHMvaGlnaHN0b2NrJztcbmltcG9ydCAqIGFzIEhpZ2htYXBzIGZyb20gJ2hpZ2hjaGFydHMvaGlnaG1hcHMnO1xuaW1wb3J0ICogYXMgSGlnaGNoYXJ0c19HbmF0dCBmcm9tICdoaWdoY2hhcnRzL2hpZ2hjaGFydHMtZ2FudHQnO1xuXG5leHBvcnQgbGV0IEhJR0hDSEFSVFNfTU9EVUxFUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxhbnlbXT4oJ0hpZ2hjaGFydHNNb2R1bGVzJyk7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDaGFydFNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihASW5qZWN0KEhJR0hDSEFSVFNfTU9EVUxFUykgcHJpdmF0ZSBjaGFydE1vZHVsZXM6IGFueVtdKSB7IH1cblxuICBpbml0TW9kdWxlcygpIHtcbiAgICB0aGlzLmNoYXJ0TW9kdWxlcy5mb3JFYWNoKGNoYXJ0TW9kdWxlID0+IHtcbiAgICAgIFtIaWdoY2hhcnRzLCBIaWdoc3RvY2ssIEhpZ2htYXBzLCBIaWdoY2hhcnRzX0duYXR0XS5mb3JFYWNoKGNoYXJ0TW9kdWxlKTtcbiAgICB9KTtcbiAgfVxufVxuIl19