{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageCanvas\n */\n\n\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nvar ImageCanvas =\n/** @class */\nfunction (_super) {\n  __extends(ImageCanvas, _super);\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader=} opt_loader Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n\n\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n    var _this = this;\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n    _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n\n    _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n    _this.canvas_ = canvas;\n    /**\n     * @private\n     * @type {?Error}\n     */\n\n    _this.error_ = null;\n    return _this;\n  }\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n\n\n  ImageCanvas.prototype.getError = function () {\n    return this.error_;\n  };\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n\n\n  ImageCanvas.prototype.handleLoad_ = function (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  ImageCanvas.prototype.load = function () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n\n\n  ImageCanvas.prototype.getImage = function () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase);\n\nexport default ImageCanvas; //# sourceMappingURL=ImageCanvas.js.map","map":{"version":3,"sources":["D:/angular-openlayer/node_modules/ol/ImageCanvas.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","ImageBase","ImageState","ImageCanvas","_super","extent","resolution","pixelRatio","canvas","opt_loader","_this","state","undefined","IDLE","LOADED","loader_","canvas_","error_","getError","handleLoad_","err","ERROR","changed","load","LOADING","bind","getImage"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {?Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {?Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map"]},"metadata":{},"sourceType":"module"}