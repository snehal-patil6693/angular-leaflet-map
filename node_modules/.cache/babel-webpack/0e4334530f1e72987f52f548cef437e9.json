{"ast":null,"code":"/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\n\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') + (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function () {\n    cleanup();\n\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n\n  document.getElementsByTagName('head')[0].appendChild(script);\n} //# sourceMappingURL=net.js.map","map":{"version":3,"sources":["D:/angular-openlayer/node_modules/ol/net.js"],"names":["getUid","jsonp","url","callback","opt_errback","opt_callbackParam","script","document","createElement","key","cleanup","window","parentNode","removeChild","async","src","indexOf","timer","setTimeout","data","clearTimeout","getElementsByTagName","appendChild"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,GAAf,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,iBAA3C,EAA8D;AACjE,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACA,MAAIC,GAAG,GAAG,SAAST,MAAM,CAACG,QAAD,CAAzB;;AACA,WAASO,OAAT,GAAmB;AACf,WAAOC,MAAM,CAACF,GAAD,CAAb;AACAH,IAAAA,MAAM,CAACM,UAAP,CAAkBC,WAAlB,CAA8BP,MAA9B;AACH;;AACDA,EAAAA,MAAM,CAACQ,KAAP,GAAe,IAAf;AACAR,EAAAA,MAAM,CAACS,GAAP,GACIb,GAAG,IACEA,GAAG,CAACc,OAAJ,CAAY,GAAZ,KAAoB,CAAC,CAArB,GAAyB,GAAzB,GAA+B,GADjC,CAAH,IAEKX,iBAAiB,IAAI,UAF1B,IAGI,GAHJ,GAIII,GALR;AAMA,MAAIQ,KAAK,GAAGC,UAAU,CAAC,YAAY;AAC/BR,IAAAA,OAAO;;AACP,QAAIN,WAAJ,EAAiB;AACbA,MAAAA,WAAW;AACd;AACJ,GALqB,EAKnB,KALmB,CAAtB;;AAMAO,EAAAA,MAAM,CAACF,GAAD,CAAN,GAAc,UAAUU,IAAV,EAAgB;AAC1BC,IAAAA,YAAY,CAACH,KAAD,CAAZ;AACAP,IAAAA,OAAO;AACPP,IAAAA,QAAQ,CAACgB,IAAD,CAAR;AACH,GAJD;;AAKAZ,EAAAA,QAAQ,CAACc,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDhB,MAArD;AACH,C,CACD","sourcesContent":["/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src =\n        url +\n            (url.indexOf('?') == -1 ? '?' : '&') +\n            (opt_callbackParam || 'callback') +\n            '=' +\n            key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map"]},"metadata":{},"sourceType":"module"}